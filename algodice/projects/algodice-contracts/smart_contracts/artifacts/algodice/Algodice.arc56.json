{
    "name": "Algodice",
    "structs": {},
    "methods": [
        {
            "name": "roll_always_lose",
            "args": [
                {
                    "type": "pay",
                    "name": "pay"
                }
            ],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "roll_always_win",
            "args": [
                {
                    "type": "pay",
                    "name": "pay"
                }
            ],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "hello",
            "args": [
                {
                    "type": "string",
                    "name": "name"
                }
            ],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        178,
                        208
                    ],
                    "errorMessage": "Minimum bet size is 0.1 ALGO"
                },
                {
                    "pc": [
                        55,
                        85,
                        119
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        158
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        58,
                        88,
                        122
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        171,
                        200
                    ],
                    "errorMessage": "payment sender must match transaction sender"
                },
                {
                    "pc": [
                        98,
                        132
                    ],
                    "errorMessage": "transaction type is pay"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuYXBwcm92YWxfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIGludGNibG9jayAxIDEwMDAwMCAxMDAwCiAgICBieXRlY2Jsb2NrIDB4MTUxZjdjNzUKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9hbGdvZGljZS9jb250cmFjdC5weToxOQogICAgLy8gY2xhc3MgQWxnb2RpY2UoQVJDNENvbnRyYWN0KToKICAgIHR4biBOdW1BcHBBcmdzCiAgICBieiBtYWluX2JhcmVfcm91dGluZ0A4CiAgICBwdXNoYnl0ZXNzIDB4MDMwYWZlZDkgMHhkNjZiOTFiYiAweDAyYmVjZTExIC8vIG1ldGhvZCAicm9sbF9hbHdheXNfbG9zZShwYXkpc3RyaW5nIiwgbWV0aG9kICJyb2xsX2Fsd2F5c193aW4ocGF5KXN0cmluZyIsIG1ldGhvZCAiaGVsbG8oc3RyaW5nKXN0cmluZyIKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDAKICAgIG1hdGNoIG1haW5fcm9sbF9hbHdheXNfbG9zZV9yb3V0ZUAzIG1haW5fcm9sbF9hbHdheXNfd2luX3JvdXRlQDQgbWFpbl9oZWxsb19yb3V0ZUA1CgptYWluX2FmdGVyX2lmX2Vsc2VAMTI6CiAgICAvLyBzbWFydF9jb250cmFjdHMvYWxnb2RpY2UvY29udHJhY3QucHk6MTkKICAgIC8vIGNsYXNzIEFsZ29kaWNlKEFSQzRDb250cmFjdCk6CiAgICBwdXNoaW50IDAgLy8gMAogICAgcmV0dXJuCgptYWluX2hlbGxvX3JvdXRlQDU6CiAgICAvLyBzbWFydF9jb250cmFjdHMvYWxnb2RpY2UvY29udHJhY3QucHk6NDEKICAgIC8vIEBhYmltZXRob2QoKQogICAgdHhuIE9uQ29tcGxldGlvbgogICAgIQogICAgYXNzZXJ0IC8vIE9uQ29tcGxldGlvbiBpcyBub3QgTm9PcAogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgIGFzc2VydCAvLyBjYW4gb25seSBjYWxsIHdoZW4gbm90IGNyZWF0aW5nCiAgICAvLyBzbWFydF9jb250cmFjdHMvYWxnb2RpY2UvY29udHJhY3QucHk6MTkKICAgIC8vIGNsYXNzIEFsZ29kaWNlKEFSQzRDb250cmFjdCk6CiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAxCiAgICBleHRyYWN0IDIgMAogICAgLy8gc21hcnRfY29udHJhY3RzL2FsZ29kaWNlL2NvbnRyYWN0LnB5OjQxCiAgICAvLyBAYWJpbWV0aG9kKCkKICAgIGNhbGxzdWIgaGVsbG8KICAgIGR1cAogICAgbGVuCiAgICBpdG9iCiAgICBleHRyYWN0IDYgMgogICAgc3dhcAogICAgY29uY2F0CiAgICBieXRlY18wIC8vIDB4MTUxZjdjNzUKICAgIHN3YXAKICAgIGNvbmNhdAogICAgbG9nCiAgICBpbnRjXzAgLy8gMQogICAgcmV0dXJuCgptYWluX3JvbGxfYWx3YXlzX3dpbl9yb3V0ZUA0OgogICAgLy8gc21hcnRfY29udHJhY3RzL2FsZ29kaWNlL2NvbnRyYWN0LnB5OjMwCiAgICAvLyBAYXJjNC5hYmltZXRob2QKICAgIHR4biBPbkNvbXBsZXRpb24KICAgICEKICAgIGFzc2VydCAvLyBPbkNvbXBsZXRpb24gaXMgbm90IE5vT3AKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICBhc3NlcnQgLy8gY2FuIG9ubHkgY2FsbCB3aGVuIG5vdCBjcmVhdGluZwogICAgLy8gc21hcnRfY29udHJhY3RzL2FsZ29kaWNlL2NvbnRyYWN0LnB5OjE5CiAgICAvLyBjbGFzcyBBbGdvZGljZShBUkM0Q29udHJhY3QpOgogICAgdHhuIEdyb3VwSW5kZXgKICAgIGludGNfMCAvLyAxCiAgICAtCiAgICBkdXAKICAgIGd0eG5zIFR5cGVFbnVtCiAgICBpbnRjXzAgLy8gcGF5CiAgICA9PQogICAgYXNzZXJ0IC8vIHRyYW5zYWN0aW9uIHR5cGUgaXMgcGF5CiAgICAvLyBzbWFydF9jb250cmFjdHMvYWxnb2RpY2UvY29udHJhY3QucHk6MzAKICAgIC8vIEBhcmM0LmFiaW1ldGhvZAogICAgY2FsbHN1YiByb2xsX2Fsd2F5c193aW4KICAgIGR1cAogICAgbGVuCiAgICBpdG9iCiAgICBleHRyYWN0IDYgMgogICAgc3dhcAogICAgY29uY2F0CiAgICBieXRlY18wIC8vIDB4MTUxZjdjNzUKICAgIHN3YXAKICAgIGNvbmNhdAogICAgbG9nCiAgICBpbnRjXzAgLy8gMQogICAgcmV0dXJuCgptYWluX3JvbGxfYWx3YXlzX2xvc2Vfcm91dGVAMzoKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9hbGdvZGljZS9jb250cmFjdC5weToyMQogICAgLy8gQGFyYzQuYWJpbWV0aG9kCiAgICB0eG4gT25Db21wbGV0aW9uCiAgICAhCiAgICBhc3NlcnQgLy8gT25Db21wbGV0aW9uIGlzIG5vdCBOb09wCiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgYXNzZXJ0IC8vIGNhbiBvbmx5IGNhbGwgd2hlbiBub3QgY3JlYXRpbmcKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9hbGdvZGljZS9jb250cmFjdC5weToxOQogICAgLy8gY2xhc3MgQWxnb2RpY2UoQVJDNENvbnRyYWN0KToKICAgIHR4biBHcm91cEluZGV4CiAgICBpbnRjXzAgLy8gMQogICAgLQogICAgZHVwCiAgICBndHhucyBUeXBlRW51bQogICAgaW50Y18wIC8vIHBheQogICAgPT0KICAgIGFzc2VydCAvLyB0cmFuc2FjdGlvbiB0eXBlIGlzIHBheQogICAgLy8gc21hcnRfY29udHJhY3RzL2FsZ29kaWNlL2NvbnRyYWN0LnB5OjIxCiAgICAvLyBAYXJjNC5hYmltZXRob2QKICAgIGNhbGxzdWIgcm9sbF9hbHdheXNfbG9zZQogICAgZHVwCiAgICBsZW4KICAgIGl0b2IKICAgIGV4dHJhY3QgNiAyCiAgICBzd2FwCiAgICBjb25jYXQKICAgIGJ5dGVjXzAgLy8gMHgxNTFmN2M3NQogICAgc3dhcAogICAgY29uY2F0CiAgICBsb2cKICAgIGludGNfMCAvLyAxCiAgICByZXR1cm4KCm1haW5fYmFyZV9yb3V0aW5nQDg6CiAgICAvLyBzbWFydF9jb250cmFjdHMvYWxnb2RpY2UvY29udHJhY3QucHk6MTkKICAgIC8vIGNsYXNzIEFsZ29kaWNlKEFSQzRDb250cmFjdCk6CiAgICB0eG4gT25Db21wbGV0aW9uCiAgICBibnogbWFpbl9hZnRlcl9pZl9lbHNlQDEyCiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgIQogICAgYXNzZXJ0IC8vIGNhbiBvbmx5IGNhbGwgd2hlbiBjcmVhdGluZwogICAgaW50Y18wIC8vIDEKICAgIHJldHVybgoKCi8vIHNtYXJ0X2NvbnRyYWN0cy5hbGdvZGljZS5jb250cmFjdC5BbGdvZGljZS5yb2xsX2Fsd2F5c19sb3NlKHBheTogdWludDY0KSAtPiBieXRlczoKcm9sbF9hbHdheXNfbG9zZToKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9hbGdvZGljZS9jb250cmFjdC5weToyMS0yMgogICAgLy8gQGFyYzQuYWJpbWV0aG9kCiAgICAvLyBkZWYgcm9sbF9hbHdheXNfbG9zZShzZWxmLCBwYXk6IGd0eG4uUGF5bWVudFRyYW5zYWN0aW9uKSAtPiBTdHJpbmc6CiAgICBwcm90byAxIDEKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9hbGdvZGljZS9jb250cmFjdC5weToyNC0yNQogICAgLy8gIyBWZXJpZnkgcGF5bWVudCB0cmFuc2FjdGlvbgogICAgLy8gYXNzZXJ0IHBheS5zZW5kZXIgPT0gVHhuLnNlbmRlciwgInBheW1lbnQgc2VuZGVyIG11c3QgbWF0Y2ggdHJhbnNhY3Rpb24gc2VuZGVyIgogICAgZnJhbWVfZGlnIC0xCiAgICBndHhucyBTZW5kZXIKICAgIHR4biBTZW5kZXIKICAgID09CiAgICBhc3NlcnQgLy8gcGF5bWVudCBzZW5kZXIgbXVzdCBtYXRjaCB0cmFuc2FjdGlvbiBzZW5kZXIKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9hbGdvZGljZS9jb250cmFjdC5weToyNgogICAgLy8gYXNzZXJ0IHBheS5hbW91bnQgPj0gMTAwMDAwLCAiTWluaW11bSBiZXQgc2l6ZSBpcyAwLjEgQUxHTyIKICAgIGZyYW1lX2RpZyAtMQogICAgZ3R4bnMgQW1vdW50CiAgICBpbnRjXzEgLy8gMTAwMDAwCiAgICA+PQogICAgYXNzZXJ0IC8vIE1pbmltdW0gYmV0IHNpemUgaXMgMC4xIEFMR08KICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9hbGdvZGljZS9jb250cmFjdC5weToyOAogICAgLy8gcmV0dXJuIFN0cmluZygiWW91IExvc2UiKQogICAgcHVzaGJ5dGVzICJZb3UgTG9zZSIKICAgIHJldHN1YgoKCi8vIHNtYXJ0X2NvbnRyYWN0cy5hbGdvZGljZS5jb250cmFjdC5BbGdvZGljZS5yb2xsX2Fsd2F5c193aW4ocGF5OiB1aW50NjQpIC0+IGJ5dGVzOgpyb2xsX2Fsd2F5c193aW46CiAgICAvLyBzbWFydF9jb250cmFjdHMvYWxnb2RpY2UvY29udHJhY3QucHk6MzAtMzEKICAgIC8vIEBhcmM0LmFiaW1ldGhvZAogICAgLy8gZGVmIHJvbGxfYWx3YXlzX3dpbihzZWxmLCBwYXk6IGd0eG4uUGF5bWVudFRyYW5zYWN0aW9uKSAtPiBTdHJpbmc6CiAgICBwcm90byAxIDEKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9hbGdvZGljZS9jb250cmFjdC5weTozMi0zMwogICAgLy8gIyBWZXJpZnkgcGF5bWVudCB0cmFuc2FjdGlvbgogICAgLy8gYXNzZXJ0IHBheS5zZW5kZXIgPT0gVHhuLnNlbmRlciwgInBheW1lbnQgc2VuZGVyIG11c3QgbWF0Y2ggdHJhbnNhY3Rpb24gc2VuZGVyIgogICAgZnJhbWVfZGlnIC0xCiAgICBndHhucyBTZW5kZXIKICAgIHR4biBTZW5kZXIKICAgID09CiAgICBhc3NlcnQgLy8gcGF5bWVudCBzZW5kZXIgbXVzdCBtYXRjaCB0cmFuc2FjdGlvbiBzZW5kZXIKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9hbGdvZGljZS9jb250cmFjdC5weTozNAogICAgLy8gYXNzZXJ0IHBheS5hbW91bnQgPj0gMTAwMDAwLCAiTWluaW11bSBiZXQgc2l6ZSBpcyAwLjEgQUxHTyIKICAgIGZyYW1lX2RpZyAtMQogICAgZ3R4bnMgQW1vdW50CiAgICBkdXAKICAgIGludGNfMSAvLyAxMDAwMDAKICAgID49CiAgICBhc3NlcnQgLy8gTWluaW11bSBiZXQgc2l6ZSBpcyAwLjEgQUxHTwogICAgLy8gc21hcnRfY29udHJhY3RzL2FsZ29kaWNlL2NvbnRyYWN0LnB5OjM1CiAgICAvLyBzZW5kX2Ftb3VudCA9IHBheS5hbW91bnQgKiBVSW50NjQoMikgKyBVSW50NjQoMTAwMCkKICAgIHB1c2hpbnQgMiAvLyAyCiAgICAqCiAgICBpbnRjXzIgLy8gMTAwMAogICAgKwogICAgLy8gc21hcnRfY29udHJhY3RzL2FsZ29kaWNlL2NvbnRyYWN0LnB5OjM2CiAgICAvLyBpdHhuLlBheW1lbnQoYW1vdW50PXNlbmRfYW1vdW50LCByZWNlaXZlcj1UeG4uc2VuZGVyLCBmZWU9MTAwMCkuc3VibWl0KCkKICAgIGl0eG5fYmVnaW4KICAgIHR4biBTZW5kZXIKICAgIGl0eG5fZmllbGQgUmVjZWl2ZXIKICAgIGl0eG5fZmllbGQgQW1vdW50CiAgICBpbnRjXzAgLy8gcGF5CiAgICBpdHhuX2ZpZWxkIFR5cGVFbnVtCiAgICBpbnRjXzIgLy8gMTAwMAogICAgaXR4bl9maWVsZCBGZWUKICAgIGl0eG5fc3VibWl0CiAgICAvLyBzbWFydF9jb250cmFjdHMvYWxnb2RpY2UvY29udHJhY3QucHk6MzgKICAgIC8vIHJldHVybiBTdHJpbmcoIllvdSBXaW4iKQogICAgcHVzaGJ5dGVzICJZb3UgV2luIgogICAgcmV0c3ViCgoKLy8gc21hcnRfY29udHJhY3RzLmFsZ29kaWNlLmNvbnRyYWN0LkFsZ29kaWNlLmhlbGxvKG5hbWU6IGJ5dGVzKSAtPiBieXRlczoKaGVsbG86CiAgICAvLyBzbWFydF9jb250cmFjdHMvYWxnb2RpY2UvY29udHJhY3QucHk6NDEtNDIKICAgIC8vIEBhYmltZXRob2QoKQogICAgLy8gZGVmIGhlbGxvKHNlbGYsIG5hbWU6IFN0cmluZykgLT4gU3RyaW5nOgogICAgcHJvdG8gMSAxCiAgICAvLyBzbWFydF9jb250cmFjdHMvYWxnb2RpY2UvY29udHJhY3QucHk6NDMKICAgIC8vIHJldHVybiAiQWhhLCAiICsgbmFtZQogICAgcHVzaGJ5dGVzICJBaGEsICIKICAgIGZyYW1lX2RpZyAtMQogICAgY29uY2F0CiAgICByZXRzdWIK",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CiADAaCNBugHJgEEFR98dTEbQQCBggMEAwr+2QTWa5G7BAK+zhE2GgCOAwBDACEAA4EAQzEZFEQxGEQ2GgFXAgCIAKpJFRZXBgJMUChMULAiQzEZFEQxGEQxFiIJSTgQIhJEiABYSRUWVwYCTFAoTFCwIkMxGRREMRhEMRYiCUk4ECISRIgAGUkVFlcGAkxQKExQsCJDMRlA/5YxGBREIkOKAQGL/zgAMQASRIv/OAgjD0SACFlvdSBMb3NliYoBAYv/OAAxABJEi/84CEkjD0SBAgskCLExALIHsggishAksgGzgAdZb3UgV2luiYoBAYAFQWhhLCCL/1CJ",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 10,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}